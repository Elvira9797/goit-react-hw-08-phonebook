{"version":3,"file":"static/js/868.ad15591b.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormBox = styled.div`\n  width: 400px;\n  padding: 40px;\n  margin-top: 90px;\n  align-self: self-start;\n  background: #f1f7fe;\n  color: #010101;\n  box-sizing: border-box;\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  margin-bottom: 25px;\n  @media (max-width: 1120px) {\n    margin: 0 auto;\n  }\n  @media (max-width: 420px) {\n    max-width: 100%;\n  }\n`;\n\nexport const FormTitle = styled.p`\n  font-weight: bold;\n  font-size: 1.6rem;\n  text-align: center;\n  margin-top: 0;\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 1rem;\n  color: #666;\n  text-align: center;\n`;\n\nexport const ContactBox = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  color: #black;\n  top: ${({ filled, focused }) => (filled || focused ? '-20px' : '0')};\n  left: 0;\n  padding: 10px 0;\n  font-size: ${({ filled, focused }) => (filled || focused ? '12px' : '16px')};\n  color: ${({ filled, focused }) =>\n    filled || focused ? '#bdb8b8' : '#898989'};\n  pointer-events: none;\n  transition: 0.5s;\n`;\n\nexport const InputEmail = styled.input`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 16px;\n  color: black;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid black;\n  outline: none;\n  background-color: transparent;\n  transition: font-size 0.3s, color 0.3s;\n  &::placeholder {\n    color: #black;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 16px;\n  color: black;\n  margin-bottom: 20px;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid black;\n  outline: none;\n  background-color: transparent;\n  transition: font-size 0.3s, color 0.3s;\n  &::placeholder {\n    color: black;\n  }\n  &:focus ~ label,\n  &:valid ~ label,\n  &:autofill ~ label {\n    transform: translateY(-20px);\n    font-size: 12px;\n    color: #bdb8b8;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  display: inline-block;\n  border: none;\n  padding: 10px 20px;\n  background-image: linear-gradient(\n    99deg,\n    rgb(51, 106, 237) 0%,\n    rgb(83, 51, 237) 50%,\n    rgb(83, 51, 237) 100%\n  );\n  border-radius: 5px;\n  color: #fff;\n  font-size: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: 0.3s;\n  margin-top: 20px;\n  letter-spacing: 4px;\n  cursor: pointer;\n  &:hover {\n    background-image: linear-gradient(\n      99deg,\n      rgb(51, 106, 237) 0%,\n      rgb(83, 51, 237) 80%,\n      rgb(83, 51, 237) 20%\n    );\n    border-radius: 5px;\n  }\n`;\n\nexport const Div = styled.div`\n  text-align: center;\n  font-size: 14px;\n  color: #e3474f;\n`;\n\nexport const Question = styled.p`\n  margin-top: 20px;\n  margin-bottom: 0;\n`;\n\nexport const Login = styled.button`\n  background: none;\n  border: none;\n  font-size: 16px;\n  font-weight: bold;\n  color: #0066ff;\n  padding: 3px;\n  transition: color 0.3s ease;\n  &:hover {\n    color: #005ce6;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\n\nimport * as Yup from 'yup';\nimport {\n  Label,\n  Button,\n  Input,\n  Div,\n  FormBox,\n  ContactBox,\n  InputEmail,\n  Login,\n  FormTitle,\n  Subtitle,\n  Question,\n} from './LoginForm.styled';\nimport { Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginForm = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email address')\n      .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, 'Invalid email address')\n      .required('Email is required'),\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters long')\n      .required('Password is required'),\n  });\n\n  const handleLoginClick = () => {\n    navigate('/register');\n  };\n\n  const [isEmailFilled, setIsEmailFilled] = useState(false);\n  const [isEmailFocused, setIsEmailFocused] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n    setIsEmailFocused(false);\n    setIsEmailFilled(false);\n  };\n\n  const handleFocus = () => {\n    setIsEmailFocused(true);\n  };\n\n  const handleBlur = event => {\n    setIsEmailFocused(false);\n    if (event.target.value.trim() !== '') {\n      setIsEmailFilled(true);\n    } else {\n      setIsEmailFilled(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormBox>\n        <Form>\n          <FormTitle>Sign in</FormTitle>\n          <Subtitle>Nice to see you again.</Subtitle>\n          <ContactBox>\n            <Field\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"new-email\"\n              as={InputEmail}\n              required\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n            <ErrorMessage name=\"email\" component={Div} />\n            <Label filled={isEmailFilled} focused={isEmailFocused}>\n              Email\n            </Label>\n          </ContactBox>\n          <ContactBox>\n            <Field\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"new-password\"\n              as={Input}\n              required\n            />\n            <ErrorMessage name=\"password\" component={Div} />\n            <Label>Password</Label>\n          </ContactBox>\n\n          <Button type=\"submit\">Login</Button>\n        </Form>\n        <Question>\n          Don't have an account?\n          <Login onClick={handleLoginClick}> Sign up</Login>\n        </Question>\n      </FormBox>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import styled from '@emotion/styled';\n\nexport const AnimatedBg = styled.div`\n  display: flex;\n  padding: 20px;\n  height: 100vh;\n  padding-top: 80px;\n  box-sizing: border-bor;\n  flex-direction: row-reverse;\n  justify-content: space-around;\n  @media (max-width: 1120px) {\n    flex-direction: column;\n  }\n  @media (max-width: 590px) {\n    flex-direction: initial;\n    padding-top: 100px;\n  }\n`;\n\nexport const Benefits = styled.div`\n  align-self: flex-end;\n  margin-bottom: 100px;\n  padding: 32px 24px;\n  border-radius: 8px;\n  background: rgba(14, 10, 27, 0.5);\n  border: 1px solid rgba(14, 10, 27, 0.5);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  color: white;\n  @media (max-width: 1120px) {\n    margin: 0 auto;\n  }\n  @media (max-width: 590px) {\n    display: none;\n  }\n`;\n\nexport const RegisterTitle = styled.h1`\n  margin-top: 0;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  padding-left: 15px;\n  margin-bottom: 0;\n`;\n","import LoginForm from 'components/LoginForm';\nimport HALO from 'vanta/src/vanta.halo';\nimport { useEffect } from 'react';\nimport { AnimatedBg, Benefits, List, RegisterTitle } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  useEffect(() => {\n    HALO({\n      el: '#animateBg',\n      mouseControls: true,\n      touchControls: true,\n      gyroControls: false,\n      backgroundColor: 0x82964,\n      minHeight: 200.0,\n      minWidth: 200.0,\n      xOffset: -0.14,\n    });\n  });\n  return (\n    <AnimatedBg id=\"animateBg\">\n      <LoginForm />\n      <Benefits>\n        <RegisterTitle>Welcome to your Contacts Book!</RegisterTitle>\n        <List>\n          <li>Organize Your Contacts and stay Effortlessly Connected</li>\n          <li>\n            Discover a new level of efficiency and convenience with our contacts\n            book!\n          </li>\n          <li>\n            Rest assured that your contact information is kept secure and\n            private at all times\n          </li>\n          <li>\n            Thank you for trusting us to keep your connections in perfect order!\n          </li>\n        </List>\n      </Benefits>\n    </AnimatedBg>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormBox","styled","FormTitle","Subtitle","ContactBox","Label","filled","focused","InputEmail","Input","Button","Div","Question","Login","dispatch","useDispatch","navigate","useNavigate","validationSchema","Yup","shape","email","matches","required","password","min","useState","isEmailFilled","setIsEmailFilled","isEmailFocused","setIsEmailFocused","initialValues","onSubmit","values","resetForm","logIn","type","name","autoComplete","as","onFocus","onBlur","event","target","value","trim","component","onClick","AnimatedBg","Benefits","RegisterTitle","List","useEffect","HALO","el","mouseControls","touchControls","gyroControls","backgroundColor","minHeight","minWidth","xOffset","id"],"sourceRoot":""}